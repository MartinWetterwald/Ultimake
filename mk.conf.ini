[names]
; This variable enable to set up the name of the final executable file.
	exename =

; Folder in which automatic and recursive source code finding will happen.
	srcdir = src/

; Folder in which the result of the compilation will be stored.
	builddir = build/

; Folders for the final executable, object, assembly, preprocessor
; and dependency files (all will be subfolders of <builddir>)
	bindir = bin/
	objdir = obj/
	asmdir = asm/
	predir = pre/
	depdir = dep/


[modes]
; This variable can be set to "C" or "CPP"
; "C" enable C compilation, "CPP" enables CPP compilation
	mode = CPP

; This variable controls whether release mode should be activated.
; "yes" activates release mode. Other values activate debug mode.
	release = no

; If set to "yes", the compilation process will be very detailed.
; The preprocessing, compiling and assembling steps will be done
; separately, keeping each stage in a file, allowing the programmer
; to debug very deeply when an error occurs.
; Any other value that "yes" (including empty value) will disable
; detailed compilation and therefore enable normal mode, which
; will merge those three steps in one big compilation step.
	detailedcomp = no


; Following sections allow to set the compiler flags.
; For each step of compilation, common, debug and release flags can be
; set. Common flags are always passed to the compiler, no matter whether
; release or debug mode is activated.
; Debug flags are only passed to the compiler when release mode is off.
; Release flags are only passed to the compiler when release mode is on.
; WARNING: there is no need here to add -I, -L and -l flags.
; There are automatically handled.
; See <[preprocessing]/headerdirs> and <[linking]/libdirs> variables
; for more information.
[preprocessing]
; List of folders in which to look for .h files, separated by spaces.
; For each, "-I" will automatically added.
	headerdirs =

; N.B: <[preprocessing]/flagscommon> always contains "-DPROGNAME",
; which passes to the program its own name (<[names]/exename>)
	flagscommon = -std=c++0x
	flagsdebug = -DDEBUG
	flagsrelease =

[compiling]
	flagscommon = -std=c++0x
	flagsdebug = -Wall -Wextra -Weffc++ -O0 -g3
	flagsrelease = -O3 -Werror

[assembling]
	flagscommon =
	flagsdebug =
	flagsrelease =

[linking]
; List of folders in which to look for static libs, separated by spaces.
; For each, "-L" will automatically added.
; For each file found in one of the <libdirs>, matching "-l" flag
; will be generated and automatically passed to the linker.
	libdirs =

; List of "-l" flags (only for system static librairies)
	syslibs =

	flagscommon =
	flagsdebug =
	flagsrelease =
